---
interface Resource {
  href: string;
  title: string;
}

interface allPosts {
  allPosts: Record<string, any>[];
}

import Search from "astro-pagefind/components/Search";
import '@/styles/pagefind-ui-custom.css';
import BaseLayout from "@/layouts/BaseLayout.astro";
import BlogPostLink from "@/components/BlogPostLink.astro";
// import BlogPostCard from "@/components/BlogPostCard.astro";
// import { getSlugName } from '@/scripts/urlUtils';
import { getCollection } from 'astro:content';
import TagLabel from '@/components/TagLabel.astro';
import resources from "@/content/_resources.json";

const allPosts = await getCollection('posts');

const allTags = [...new Set(allPosts.flatMap(post => post.data.tags))];
---

<BaseLayout pageTitle="Temas" subTitle="Enlaces recomendados">
  
  <h2 class="mt-2 mb-6">Buscador</h2>

  <Search id="search" className="pagefind-ui" uiOptions={{ showImages: false }} />

  <ul class="link-card-grid mt-8">
    { resources.in.length ? (
      <li>
        <ul class="md:mb-4">
          <h2 class="mt-0 md:mt-2 md:pb-2">Destacados del blog</h2>
          {resources.in.map((resource: Resource) => (
            <BlogPostLink href={`/blog/${resource.href}`} title={resource.title} />
          ))}
        </ul>
      </li>
      ) : ( "" )
    }

    { resources.out.length ? (
      <li>
        <ul class="md:mb-4">
          <h2 class="mt-0 md:mt-2 md:pb-2">Enlaces externos</h2>
          {resources.out.map((resource: Resource) => (
            <BlogPostLink href={resource.href} title={resource.title} />
          ))}
        </ul>
      </li>
      ) : ( "" )
    }
  </ul>

  {/*
    <ul id="blogPost" class="my-8 text-center md:text-left">
      <h2>Entrada aleatoria</h2>
      <BlogPostCard
          frontmatter={post.data}
          href=`${post.data.route || getSlugName(post.slug)}`
      />
    </ul>
  */}

  <div data-pagefind-ignore="all">
    { allTags.length ? (
      <>
        <h2>Etiquetas del blog</h2>
        <div class="flex flex-wrap mt-4">
          <TagLabel tag="Todas las entradas" />
          {allTags
            .sort((a, b) => String(a).localeCompare(String(b))) // evita undefined
            .map(tag => <TagLabel tag={tag} />)}
        </div>
      </>
    ) : ( "" ) }
  </div>

</BaseLayout>

{/* 
<script define:vars={{ allPosts }} is:inline>
  document.addEventListener('astro:page-load', () => {
    const randomIndex = Math.floor(Math.random() * allPosts.length);
    const post = allPosts[randomIndex];

    //

  });
</script>
*/}