---
interface Props {
    posts: Record<string, any>[];
    tags: Array<string>;
}

import { getCollection } from 'astro:content';

import BaseLayout from '@/layouts/BaseLayout.astro';
import BlogPostLink from '@/components/BlogPostLink.astro';
import ButtonLink from '@/components/ButtonLink.astro';
import TagLabel from '@/components/TagLabel.astro';

export async function getStaticPaths() {
  const allPosts: Record<string, any>[] = await getCollection('posts');

  const uniqueTags = [...new Set(allPosts.flatMap(post => post.data.tags))];

  return uniqueTags.map((tag, _, allTags) => {
    const tags = allTags.filter(tagName => tagName !== tag);
    const filteredPosts = allPosts.filter(post => post.data.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts, tags },
    };
  });
}

const { tag } = Astro.params;
const { posts, tags } = Astro.props;
---

<BaseLayout pageTitle={`Tema: ${tag}`}>
  
  <h2>{`${posts.length} entradas`}</h2>
  <ul class="mt-8 mb-12 list-disc">
    {posts.map(post => <BlogPostLink title={post.data.title} 
        href=`/blog/${post.data.route || post.slug}` />
    )}
  </ul>

  { tags.length ? (
    <>
      <h2>Otros temas</h2>
      <div class="mt-4 mb-12 flex flex-wrap">
        <TagLabel tag="Todas las entradas" />
        {tags
          .sort((a, b) => String(a).localeCompare(String(b))) // evita undefined
          .map(tag => <TagLabel tag={tag} />)}
      </div>
    </>
  ) : ( "" ) }

  <ButtonLink text="←&nbsp;Volver" />

</BaseLayout>