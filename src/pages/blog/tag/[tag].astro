---
interface Props {
    posts: Record<string, any>[];
    tags: Array<string>;
}

import { getPosts } from '@/scripts/posts';
import BaseLayout from '@/layouts/BaseLayout.astro';
import BlogPostLink from '@/components/BlogPostLink.astro';
import ButtonLink from '@/components/ButtonLink.astro';
import TagLabel from '@/components/TagLabel.astro';

export async function getStaticPaths() {
  const allPosts = await getPosts();

  const uniqueTags = [...new Set(allPosts.flatMap(post => post.data.tags))];

  return uniqueTags.map((tag, _, allTags) => {
    const posts = allPosts.filter(post => post.data.tags.includes(tag));
    const tags = allTags.filter(tagName => tagName !== tag);
    return {
      params: { tag },
      props: { posts, tags },
    };
  });
}

const { tag } = Astro.params;
const { posts, tags } = Astro.props;
---

<BaseLayout pageTitle={`Tema: ${tag}`} subTitle="Etiquetas del blog">
  
  <h2>{`${posts.length} entrada${posts.length > 1 ? "s" : ""}`}</h2>

    <ul class="mt-8 mb-12 list-disc">
      {posts.map(post => <BlogPostLink title={post.data.title} 
          href=`/blog/${post.data.route || post.slug}` />
      )}
    </ul>

    { tags.length ? (
      <>
        <h2>Otros temas</h2>
        <div class="mt-4 mb-12 flex flex-wrap">
          {tags
            .sort((a, b) => String(a).localeCompare(String(b)))
            .map(tag => <TagLabel tag={tag} />)}
        </div>
      </>
    ) : ( "" ) }

    <div class="text-center md:text-left">
      <ButtonLink text="←&nbsp;Volver" />
    </div>

</BaseLayout>