---
import { getCollection } from 'astro:content';
import { getSlugName } from '@/scripts/urlUtils';
import BlogPostCard from "@/components/BlogPostCard.astro";

const allPosts: Record<string, any>[] = await getCollection('posts');
---

<ul id="randomPostContainer" class="my-8 text-center md:text-left">
  <div id="blogPost">
    {allPosts.map((post, index) => (
      <div class="hidden" data-post-index={index}>
        <BlogPostCard
          frontmatter={post.data}
          href={`${post.data.route || getSlugName(post.slug)}`}
        />
      </div>
    ))}
  </div>
</ul>

<script is:inline>
  let interval;

  function handleContentLoaded() {
    const postContainers = document.querySelectorAll('[data-post-index]');
    let currentIndex = randomIndex = 0;
    const maxAttempts = 5;

    function showRandomPost() {
      if (postContainers.length <= 1) return;

      let attempts = 0;
      do {
        randomIndex = Math.floor(Math.random() * postContainers.length);
        attempts++;
      } while (randomIndex === currentIndex && attempts < maxAttempts && postContainers.length > 1);

      postContainers[currentIndex].classList.add('fade-out');

      setTimeout(() => {
        postContainers[currentIndex].classList.add('hidden');
        postContainers[currentIndex].classList.remove('fade-out');

        postContainers[randomIndex].classList.add('fade-in');
        postContainers[randomIndex].classList.remove('hidden');

        setTimeout(() => {
          postContainers[randomIndex].classList.remove('fade-in');
          currentIndex = randomIndex;
        }, 550);
      }, 550);
    }

    showRandomPost();
    interval = setInterval(showRandomPost, 7000);
  }

  function cleanup() {
    if (interval) {
      clearInterval(interval);
    }
  }

  document.addEventListener('astro:page-load', handleContentLoaded);
  document.addEventListener('astro:before-preparation', cleanup);
</script>

<style>
  .fade-out {
    opacity: 0;
    transition: opacity 0.5s ease-out;
  }

  .fade-in {
    opacity: 1;
    transition: opacity 0.5s ease-in;
  }
</style>
