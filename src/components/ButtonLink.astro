---
interface Props {
    href?: string;
    text: string;
    ariaLabel?: string;
    small?: boolean;
}

import { generateUniqueId } from '@/scripts/urlUtils';
const uniqueId = generateUniqueId();

let { href, text, ariaLabel, small } = Astro.props;

// Si 'href' es "#" se entiende como bot√≥n deshabilitado, pero se muestra.
const isDisabled = href == "#";
let buttonClass = "inline-block px-3 pb-1 font-bold rounded ";
buttonClass = buttonClass + (href != "#"
    ? "bg-violet-500 text-white hover:bg-violet-700 focus:outline-none focus:ring-2 focus:ring-violet-500 focus:ring-opacity-50 transition-colors"
    : "bg-gray-200 text-gray-500 dark:bg-gray-800 cursor-not-allowed disabled");
if (small) buttonClass = buttonClass + " text-sm";
---

<a id={uniqueId} href={href} class={buttonClass} aria-label={ariaLabel || text}
    aria-disabled={isDisabled} role="button" data-astro-prefetch>
    {text}
</a>

<script is:inline define:vars={{ uniqueId, href }}>
    document.getElementById(uniqueId)?.addEventListener('click', (event) => {
      if (!href) {
        event.preventDefault();
        window.history.back();
      }
    });
</script>